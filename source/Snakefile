# configfile:
# 	"config.yaml"

# TODO: clean up deprecated parameter options
# TODO: fix gene_IDs to also work with Ensemble IDs
config['n_cells'] = 300

config['gene_IDs'] = "HUGO" # HUGO or ENSG
config['correct_for_expression_levels'] ='correct_false' # correct_true or correct_false
config['balanced_ref'] = 'balanced_true' # balanced_true or balanced_false


rule all:
	input:
		config['output_dir'] + 'output_metrics.txt'

rule get_reference_data:
	input:
		config['HLCA_file']
	output:
		config['output_dir'] + "/" + config['sample_type'] + "_subsampled_matrix_max" + str(config['n_cells']) + "cells_HUGO.txt" ,
		temp(config['output_dir'] + "/" + config['sample_type'] + "_subsampled_matrix_max" + str(config['n_cells']) + "cells_ENSG.txt")
	shell:
		"python3 get_reference_data.py " + config['sample_type'] + ' ' + str(config['n_cells'])  + ' {input} ' + 
		config['output_dir'] + ' ' + config['config_filename'] + ' ' + config['balanced_ref']

rule filter_reference_data: 
	# TODO: also filter ENSEMBL gene ref data output
	input:
		temp(config['output_dir'] + "/" + config['sample_type'] + "_subsampled_matrix_max" + str(config['n_cells']) + "cells_HUGO.txt")
	output:
		config['output_dir'] + "/" + config['sample_type'] + "_deconvolution_reference_data.txt"
	shell:
		'Rscript filter_ref_data.R {input} {output} ' + config['filter_reference'] 

rule pseudobulks_and_ground_truth:
	input:
		config['HLCA_file'] 
	output:
		config['output_dir'] + '/cell_counts.csv',
		config['output_dir'] + '/pseudobulks.csv'
	shell:
		"python3 get_pseudobulks.py " + config['sample_type'] + ' ' + config['config_filename'] + ' ' +  config['HLCA_file'] + ' ' + config['output_dir']


rule deconvolute_pseudobulks:
	input:
		config['output_dir'] + "/" + config['sample_type'] + "_deconvolution_reference_data.txt",
		config['output_dir'] + '/pseudobulks.csv'
	output:
		config['output_dir'] + '/CIBERSORTx_output/CIBERSORTx_Results.txt',
		temp(config['output_dir'] + '/CIBERSORTx_output/CIBERSORTx_cell_type_sourceGEP.txt'),
		temp(config['output_dir'] + "/" + "/CIBERSORTx_output/" + 'CIBERSORTx_' + config['sample_type'] + "_deconvolution_reference_data_inferred_phenoclasses.CIBERSORTx_" + 
			config['sample_type'] + "_deconvolution_reference_data_inferred_refsample.bm.K999.pdf"),
		temp(config['output_dir'] + "/" + "/CIBERSORTx_output/" + 'CIBERSORTx_' + config['sample_type'] + "_deconvolution_reference_data_inferred_phenoclasses.txt"),
		temp(config['output_dir'] + "/" + "/CIBERSORTx_output/" + 'CIBERSORTx_' + config['sample_type'] + "_deconvolution_reference_data_inferred_refsample.txt")
	shell:
		"docker run -v " + config['output_dir'] + ":/src/data -v " + config['output_dir'] + "/CIBERSORTx_output/:/src/outdir cibersortx/fractions --username " +
		config['email'] + " --token " + config['token'] + " --mixture " + config['output_dir'] + '/pseudobulks.csv --refsample ' +
		config['sample_type'] + "_deconvolution_reference_data.txt --single_cell TRUE" 


rule process_deconvolution:
	input:
		config['output_dir'] + '/CIBERSORTx_output/CIBERSORTx_Results.txt',
		config['output_dir'] + '/cell_counts.csv',
		config['output_dir'] + "/" + config['sample_type'] + "_deconvolution_reference_data.txt"

	output:
		config['output_dir'] + 'output_metrics.txt',

	shell:
		"Rscript process_deconv_outputs.R " + config['output_dir'] + '/cell_counts.csv' + ' ' + config['output_dir'] +
		'/CIBERSORTx_output/CIBERSORTx_Results.txt ' + config['output_dir'] + ' ' + config['correct_for_expression_levels'] +
		' ' + 

		config['output_dir'] + "/" + config['sample_type'] + "_deconvolution_reference_data.txt" +
		
		config['output_dir'] + "/" + "/CIBERSORTx_output/" +
		'CIBERSORTx_' + config['sample_type'] + "_deconvolution_reference_data_inferred_phenoclasses.CIBERSORTx_" + config['sample_type'] + "_subsampled_matrix_max" + str(config['n_cells']) +
		'cells_HUGO_filtered_inferred_refsample.bm.K999.txt;' +

		# clean up
		'rm ' + config['output_dir'] + '/cell_counts.csv; rm ' + config['output_dir'] + '/pseudobulks.csv; ' +
		# rename signature matrix file
		'mv ' + config['output_dir'] + "/CIBERSORTx_output/" +
		'CIBERSORTx_' + config['sample_type'] + "_deconvolution_reference_data_inferred_phenoclasses.CIBERSORTx_" + config['sample_type'] + 
		"_deconvolution_reference_data_inferred_refsample.bm.K999.txt " + config['output_dir'] + '/' + config['sample_type'] + '_signature_matrix.txt; ' +
		# clean up
		'rm -r '+ config['output_dir'] + '/CIBERSORTx_output; ' +
		'rm ' + config['output_dir'] + "/" + config['sample_type'] + "_subsampled_matrix_max" + str(config['n_cells']) + "cells_HUGO.txt" 
